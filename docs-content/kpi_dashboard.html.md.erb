---
title: KPI Health Rules and Dashboards
owner: Partners
---

## <a id='use-case'></a> Overview and Use Case

The Dashboard App deployed by the platform tile creates a set of KPI health rules that
implement the Pivotal best practices for platform monitoring and proactively alert you when
there’s an issue with a foundation that may impact application performance. These alerts can
be associated with actions such as opening a [support ticket](https://community.appdynamics.com/t5/Knowledge-Base/How-do-I-submit-a-Support-ticket-FAQ/ta-p/28959) using AppDynamics Policies.

The Dashboard App also creates a Single Foundation Dashboard and Multi-Foundation
Dashboard(s), which leverage the KPI health rules to track the health of a single
or multiple foundations and are appropriate for displaying in an operations center.

## <a id='metrics'></a> KPI Health Rules

The KPI health rules map directly to the Key Performance Indicators and Key Scaling Indicators
defined by Pivotal, as listed below. Each indicator includes context information, a threshold,
and what to do if the threshold is breached. The KPI health rules are named as they appear in
the Pivotal docs, and prefixed with the tier name. An example is `<tier-name>-Diego Cell
Memory Capacity`.

- [Key Performance Indicators (KPIs)](https://docs.pivotal.io/pivotalcf/monitoring/kpi.html) for monitoring Pivotal Cloud Foundry:
     - [Diego Auctioneer Metrics](https://docs.pivotal.io/pivotalcf/monitoring/kpi.html#auctioneer)
     - [Diego BBS Metrics](https://docs.pivotal.io/pivotalcf/monitoring/kpi.html#bbs)
     - [Diego Cell Metrics](https://docs.pivotal.io/pivotalcf/monitoring/kpi.html#cell)
     - [Diego Locket Metrics](https://docs.pivotal.io/pivotalcf/monitoring/kpi.html#locket)
     - [Diego Route Emitter Metrics](https://docs.pivotal.io/pivotalcf/monitoring/kpi.html#route_emitter)
     - [PAS MySQL KPIs](https://docs.pivotal.io/pivotalcf/monitoring/kpi.html#kpi4MySQL)
     - [Gorouter Metrics](https://docs.pivotal.io/pivotalcf/monitoring/kpi.html#gorouter)
     - [UAA Metrics](https://docs.pivotal.io/pivotalcf/monitoring/kpi.html#uaa)
     - [Firehose Metrics](https://docs.pivotal.io/pivotalcf/monitoring/kpi.html#doppler-server)
     - [System (BOSH) Metrics](https://docs.pivotal.io/pivotalcf/monitoring/kpi.html#bosh)

- [Key Capacity Scaling Indicators](https://docs.pivotal.io/pivotalcf/monitoring/key-cap-scaling.html):
     - [Diego Cell Capacity Scaling Indicators](https://docs.pivotal.io/pivotalcf/monitoring/key-cap-scaling.html#cell)
     - [Firehose Performance Scaling Indicators](https://docs.pivotal.io/pivotalcf/monitoring/key-cap-scaling.html#doppler-server)
     - [CF Syslog Drain Performance Scaling Indicators](https://docs.pivotal.io/pivotalcf/monitoring/key-cap-scaling.html#scalable-syslog)
     - [Router Performance Scaling Indicators](https://docs.pivotal.io/pivotalcf/monitoring/key-cap-scaling.html#Router)
     - [UAA Performance Scaling Indicators](https://docs.pivotal.io/pivotalcf/monitoring/key-cap-scaling.html#UAA)

Below is an example of a KPI health rule created for the indicator Diego Cell Container Capacity.

![KPI health rule created for the indicator Diego Cell Container Capacity](./images/pcf-kpi-hr-dccc1.png)

The Critical Criteria and Warning Criteria are defined according to the Pivotal documentation for
the Diego Cell Container Capacity indicator, which specifies that if the total container capacity for
all Diego Cells falls below 35% an operator should consider scaling the number of Diego Cells.

![Critical Criteria for the indicator Diego Cell Container Capacity](./images/pcf-kpi-hr-dccc2.png)

##  <a id='dashboard'></a> KPI Dashboards

### <a id='single-foundation'></a> Single Foundation Dashboard

The Single Foundation Dashboard visualizes performance of the PCF foundation on which the
AppDynamics platform tile is installed in a single pane of glass. It is named `<app name><tier
name>-PCF KPI Dashboard` based on the app and tier names configured for the Nozzle in the
platform tile, which default to _appd-nozzle-v2_ and `<system domain>`, respectively. The
dashboard uses health status widgets to reflect the current state of the KPI health rules, as
well as other widgets to reflect current usage and capacity of the foundation.

The dashboard is separated into three sections:

- **(top): Core capacity scaling indicators and measurements for the Diego Cell, Router, and UAA services
- **(middle): Key Performance indicators, active KPI health rule violations and graphs of Router throughput.
- **(bottom): System (BOSH) VM health indicators for the core PCF services that track the health of each VM supporting a core PCF service.

![The Single Foundation Dashboard](./images/pcf-kpi-single-dashboard.png)

### <a id='multi-foundation'></a> Multi-Foundation Dashboard

The Multi-Foundation Dashboard supports visualizing multiple foundations on a single
dashboard. Each foundation that is displayed must have the platform tile installed and be
configured to report to the same controller.

Below is an example multi-foundation dashboard that displays the status of six foundations,
one per row. It includes a single ‘Capacity Indicators’ widget to display the aggregate health of
the capacity related health rules as well as an ‘Overall (Tier) Indicators’ widget that displays the
aggregate status of all the KPI health rules associated with the foundation. Depending on the
layout, the dashboard may contain gauge widgets for current capacity, a health rule violation
widget, and current router requests.

![The Multi-Foundation Dashboard](./images/pcf-kpi-multi-dashboard.png)

#### <a id='configuration'></a> Configuration

One Multi-Foundation Dashboard is created for each configuration added in the ‘Multi-foundation
Dashboard Configurations’ section under AppDynamics Nozzle Configuration in the platform tile.

![](./images/pcf-config-all-foundations.png)

In the example, ‘all-foundations’ is the name of the new configuration, and will be prepended
to the name of the dashboard created in the Controller.

The ‘Application regex’ and ‘Tier regex’ should match one or more app/tier combinations in the
controller were AppDynamics Nozzles are reporting.

The ‘Dashboard layout selection’ defaults to ‘Auto select layout’ where the Dashboard App will
select a layout with the appropriate number of foundations per row based on the total number
of foundations discovered. Or a specific layout can be chosen to control the density of the
created dashboard.

Below are examples of the ‘Two foundations per row’ and ‘Four foundations per row’ layouts.

![Two foundations per row layout](./images/pcf-env5.png)

![Four foundations per row layout](./images/pcf-env6.png)

## <a id='dashboard-app'></a> Dashboard App Permissions

The ‘Username for reporting Dashboard’ and ‘Password’ fields from the platform tile
determine the credentials used by the Dashboard App for creating the KPI health rules and
the Single Foundation and Multi-Foundation Dashboards via the REST API. The following
screenshots show the minimal permissions required and assume a distinct user is created as
well as a role that is assigned to the user.

1. Create a ‘PCF KPI Role’ and under Dashboards assign it ‘Can Create Dashboards’ and
View and Edit permission on the Default dashboard.

![Dashboard App Permissions Can Create Dashboards](./images/pcf-kpi-role7.png)

2. Under Applications, assign the role ‘Custom’ and ‘View’ permissions for the app that the
AppDynamics Nozzle reports. The default is appd-nozzle-v2, unless it was overridden under
Advanced Configuration of the platform tile.

![Dashboard App Permissions Custom and View](./images/pcf-kpi-role8.png)

3. Edit the permissions for the application and select only ‘Configure Health Rules’

![Dashboard App Permissions Configure Health Rules](./images/pcf-kpi-role9.png)

4. Create a user and assign it the PCF KPI Role. The user and password should match the
‘Username for reporting Dashboard’ and ‘Password’ fields from the platform tile.

![Dashboard App Permissions Create User](./images/pcf-kpi-role10.png)

## <a id='recreating-kpihrs'></a> Recreating KPI HRs or Dashboards

The Dashboard App writes the health rules and dashboards to the Controller, app and tier
configured in the platform tile only if they do not exist already. If you want to recreate the
health rules or dashboards for a specific app or tier, delete them in the Controller.
You can also rename them if you want to save any changes made and reapply them. The Dashboard App will
recreate the dashboard and health rules within ten minutes, or restart the Dashboard App to
recreate them immediately.

<!--
[//]: # TBD -- Need more info or links re last point....
-->
